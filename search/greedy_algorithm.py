#-------------------------------------------------
# Жадный алгоитм. (Задача о покрытии множества)
#-------------------------------------------------

states_needed = set(["mt", "wa", "or", "id", "nv", "ut", "ca", "az"]) #Переданный массив преобразуется в множество

#-------------------------------------------------
# Хэш таблица
#-------------------------------------------------
stations = {}
stations["kone"] = set(["id", "nv", "ut"])
stations["ktwo"] = set(["wa", "id", "mt"])
stations["kthree"] = set(["or", "nv", "ca"])
stations["kfour"] = set(["nv", "ut"])
stations["kfive"] = set(["ca", "az"])

final_stations = set() #Итоговый набор данных

while states_needed:
    best_station = None #Перебирая станции мы выбираем ту, которая будет обслуживать больше всего штатов, не входящий в текущее покрытие 
    states_covered = set() #Содержит все штаты, обслуживаемые этой станцией, которые не входят в текущее покрытие 
    for station, states in stations.items(): #Цикл перебирает все станции и находит среди них наилучшую
        covered = states_needed & states #Пересечение множеств (covered - множество штатов, не входящих в покрытие, которое покрывается текущей станцией)
        if len(covered) > len(states_covered): #Проверяем, перекрывает ли эта станция больше штатов, чем текущая станция best_station
            best_station = station #Если условие выполняется, то станция сохраняется 
            states_covered = covered #Обновляем штаты которые не входят в покрытие
    states_needed -= states_covered #Те штаты, которые входят в зону покрытия станции, больше не нужны - обновляем.
    final_stations.add(best_station) #После завешения цикла best_station добавляется в итоговый список станций 

print(final_stations)
 
